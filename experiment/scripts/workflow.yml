initial_guard:
  - $USERNAME != ""
  - $HOSTS_TYPE in ['physical', 'vm']
  - $CLIENT_HOSTS != ""
  - $WEB_HOSTS != ""
  - $POSTGRESQL_HOST != ""
  - $WORKER_HOSTS != ""
  - $MICROBLOG_HOSTS != ""
  - $AUTH_HOSTS != ""
  - $INBOX_HOSTS != ""
  - $QUEUE_HOSTS != ""
  - $SUB_HOSTS != ""
  - $WISE_DEBUG in ['0', '1']

final_guard:
  - $COLLECTL_EXECFILE != ""

tasks:
- name: CopyVariables
  guard:
    - $USERNAME != ""
    - $CLIENT_HOSTS != ""
    - $WEB_HOSTS != ""
    - $POSTGRESQL_HOST != ""
    - $WORKER_HOSTS != ""
    - $MICROBLOG_HOSTS != ""
    - $AUTH_HOSTS != ""
    - $INBOX_HOSTS != ""
    - $QUEUE_HOSTS != ""
    - $SUB_HOSTS != ""
    - $ALL_HOSTS = ""
    - $CLIENT_USERNAME = ""
    - $WEB_USERNAME = ""
    - $POSTGRESQL_USERNAME = ""
    - $WORKER_USERNAME = ""
    - $MICROBLOG_USERNAME = ""
    - $AUTH_USERNAME = ""
    - $INBOX_USERNAME = ""
    - $QUEUE_USERNAME = ""
    - $SUB_USERNAME = ""
  bash: |
    readonly ALL_HOSTS="$CLIENT_HOSTS $WEB_HOSTS $POSTGRESQL_HOST $WORKER_HOSTS $MICROBLOG_HOSTS $AUTH_HOSTS $INBOX_HOSTS $QUEUE_HOSTS $SUB_HOSTS"
    readonly CLIENT_USERNAME=$USERNAME
    readonly WEB_USERNAME=$USERNAME
    readonly POSTGRESQL_USERNAME=$USERNAME
    readonly WORKER_USERNAME=$USERNAME
    readonly MICROBLOG_USERNAME=$USERNAME
    readonly AUTH_USERNAME=$USERNAME
    readonly INBOX_USERNAME=$USERNAME
    readonly QUEUE_USERNAME=$USERNAME
    readonly SUB_USERNAME=$USERNAME

- name: VmSetupFilesystem
  guard:
    - $USERNAME != ""
    - $ALL_HOSTS != ""
    - $HOSTS_TYPE = "vm"
    - $FS_ROOTDIR = ""
    - $CLIENT_FS_ROOTDIR = ""
    - $WEB_FS_ROOTDIR = ""
    - $POSTGRESQL_HOST = ""
    - $WORKER_FS_ROOTDIR = ""
    - $MICROBLOG_FS_ROOTDIR = ""
    - $AUTH_FS_ROOTDIR = ""
    - $INBOX_FS_ROOTDIR = ""
    - $QUEUE_FS_ROOTDIR = ""
    - $SUB_FS_ROOTDIR = ""
  bash: |
    readonly FS_ROOTDIR="/experiment"
    readonly CLIENT_FS_ROOTDIR=FS_ROOTDIR
    readonly WEB_FS_ROOTDIR=FS_ROOTDIR
    readonly POSTGRESQL_HOST=FS_ROOTDIR
    readonly WORKER_FS_ROOTDIR=FS_ROOTDIR
    readonly MICROBLOG_FS_ROOTDIR=FS_ROOTDIR
    readonly AUTH_FS_ROOTDIR=FS_ROOTDIR
    readonly INBOX_FS_ROOTDIR=FS_ROOTDIR
    readonly QUEUE_FS_ROOTDIR=FS_ROOTDIR
    readonly SUB_FS_ROOTDIR=FS_ROOTDIR
    local host
    for host in $ALL_HOSTS; do
      ssh -T -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o BatchMode=yes $USERNAME@$host "
        sudo mkdir -p $FS_ROOTDIR
        sudo chown $USERNAME $FS_ROOTDIR
      "
    done

- name: PhysicalSetupFilesystem
  guard:
    - $USERNAME != ""
    - $ALL_HOSTS != ""
    - $HOSTS_TYPE = "physical"
    - $FS_ROOTDIR = ""
    - $CLIENT_FS_ROOTDIR = ""
    - $WEB_FS_ROOTDIR = ""
    - $POSTGRESQL_HOST = ""
    - $WORKER_FS_ROOTDIR = ""
    - $MICROBLOG_FS_ROOTDIR = ""
    - $AUTH_FS_ROOTDIR = ""
    - $INBOX_FS_ROOTDIR = ""
    - $QUEUE_FS_ROOTDIR = ""
    - $SUB_FS_ROOTDIR = ""
  bash: |
    # Create disk partition.
    readonly FS_ROOTDIR="/mnt/experiment"
    readonly CLIENT_FS_ROOTDIR=FS_ROOTDIR
    readonly WEB_FS_ROOTDIR=FS_ROOTDIR
    readonly POSTGRESQL_HOST=FS_ROOTDIR
    readonly WORKER_FS_ROOTDIR=FS_ROOTDIR
    readonly MICROBLOG_FS_ROOTDIR=FS_ROOTDIR
    readonly AUTH_FS_ROOTDIR=FS_ROOTDIR
    readonly INBOX_FS_ROOTDIR=FS_ROOTDIR
    readonly QUEUE_FS_ROOTDIR=FS_ROOTDIR
    readonly SUB_FS_ROOTDIR=FS_ROOTDIR
    local disk="/dev/sdb"
    local pno=1
    local host
    for host in $ALL_HOSTS; do
      ssh -T -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o BatchMode=yes $USERNAME@$host "
        echo -e \"n\np\n$pno\n\n+128G\nw\n\" | sudo fdisk $disk
        nohup sudo systemctl reboot -i &>/dev/null & exit
      "
    done
    sleep 240
    # Make filesystem.
    local sessions=()
    local n_sessions=0
    local session
    for host in $ALL_HOSTS; do
      ssh -T -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o BatchMode=yes $USERNAME@$host "
        sudo mkfs -F -t ext4 /dev/sdb1
        sudo mkdir -p $FS_ROOTDIR
        sudo mount /dev/sdb1 $FS_ROOTDIR
        sudo chown $USERNAME $FS_ROOTDIR
      " &
      sessions[$n_sessions]=$!
      let n_sessions=n_sessions+1
    done
    for session in ${sessions[*]}; do
      wait $session
    done

- name: InstallWISE
  guard:
    - $USERNAME != ""
    - $ALL_HOSTS != ""
    - $FS_ROOTDIR != ""
    - $WISE_HOME = ""
  bash: |
    readonly WISE_HOME="$FS_ROOTDIR/WISETutorial"
    local host
    local sessions=()
    local n_sessions=0
    local session
    for host in $ALL_HOSTS; do
      ssh -T -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o BatchMode=yes $USERNAME@$host "
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y unzip
        wget https://github.com/coc-gatech-newelba/WISETutorial/archive/master.zip
        unzip master.zip -d $WISE_HOME
      " &
      sessions[$n_sessions]=$!
      let n_sessions=n_sessions+1
    done
    for session in ${sessions[*]}; do
      wait $session
    done

- name: InstallCollectl
  guard:
    - $USERNAME != ""
    - $ALL_HOSTS != ""
    - $FS_ROOTDIR != ""
    - $WISE_HOME != ""
    - $COLLECTL_EXECFILE = ""
  bash: |
    readonly COLLECTL_EXECFILE="/usr/bin/collectl"
    local host
    local sessions=()
    local n_sessions=0
    local session
    for host in $ALL_HOSTS; do
      ssh -T -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o BatchMode=yes $USERNAME@$host "
        tar -xzf $WISE_HOME/experiment/artifacts/collectl-4.3.1.src.tar.gz -C $FS_ROOTDIR
        cd $FS_ROOTDIR/collectl*
        sudo ./INSTALL
      " &
      sessions[$n_sessions]=$!
      let n_sessions=n_sessions+1
    done
    for session in ${sessions[*]}; do
      wait $session
    done

- name: SetupWeb
  guard:
    - $WEB_USERNAME != ""
    - $WEB_HOSTS != ""
    - $WEB_FS_ROOTDIR != ""
    - $WISE_HOME != ""
    - $COLLECTL_EXECFILE = ""
  bash: |
    readonly COLLECTL_EXECFILE="/usr/bin/collectl"
    local host
    local sessions=()
    local n_sessions=0
    local session
    for host in $ALL_HOSTS; do
      ssh -T -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o BatchMode=yes $USERNAME@$host "
        tar -xzf $WISE_HOME/experiment/artifacts/collectl-4.3.1.src.tar.gz -C $FS_ROOTDIR
        cd $FS_ROOTDIR/collectl*
        sudo ./INSTALL
      " &
      sessions[$n_sessions]=$!
      let n_sessions=n_sessions+1
    done
    for session in ${sessions[*]}; do
      wait $session
    done
...
